[{"C:\\study\\type_react\\src\\index.js":"1","C:\\study\\type_react\\src\\styles\\GlobalStyles.ts":"2","C:\\study\\type_react\\src\\pages\\index.ts":"3","C:\\study\\type_react\\src\\pages\\feed\\FeedContainer.tsx":"4","C:\\study\\type_react\\src\\graphql\\auth.ts":"5","C:\\study\\type_react\\src\\pages\\feed\\FeedPresenter.tsx":"6","C:\\study\\type_react\\src\\components\\CardComponent1.js":"7","C:\\study\\type_react\\src\\components\\auth\\LoginForm.tsx":"8","C:\\study\\type_react\\src\\styles\\styles.ts":"9","C:\\study\\type_react\\src\\components\\test\\Card\\CardPresenter.tsx":"10","C:\\study\\type_react\\src\\pages\\test\\styles.ts":"11"},{"size":427,"mtime":1610210364032,"results":"12","hashOfConfig":"13"},{"size":199,"mtime":1609332880269,"results":"14","hashOfConfig":"13"},{"size":208,"mtime":1610108966441,"results":"15","hashOfConfig":"13"},{"size":1522,"mtime":1609950140565,"results":"16","hashOfConfig":"13"},{"size":811,"mtime":1609339603786,"results":"17","hashOfConfig":"13"},{"size":1633,"mtime":1610027612861,"results":"18","hashOfConfig":"13"},{"size":3328,"mtime":1610105682890,"results":"19","hashOfConfig":"13"},{"size":2711,"mtime":1610026768042,"results":"20","hashOfConfig":"13"},{"size":4933,"mtime":1610104745922,"results":"21","hashOfConfig":"13"},{"size":3432,"mtime":1610556435966,"results":"22","hashOfConfig":"13"},{"size":1641,"mtime":1610556379960,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"13q86fw",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\study\\type_react\\src\\index.js",[],"C:\\study\\type_react\\src\\styles\\GlobalStyles.ts",[],"C:\\study\\type_react\\src\\pages\\index.ts",[],"C:\\study\\type_react\\src\\pages\\feed\\FeedContainer.tsx",[],"C:\\study\\type_react\\src\\graphql\\auth.ts",[],"C:\\study\\type_react\\src\\pages\\feed\\FeedPresenter.tsx",["47","48","49"],"C:\\study\\type_react\\src\\components\\CardComponent1.js",["50","51"],"C:\\study\\type_react\\src\\components\\auth\\LoginForm.tsx",[],"C:\\study\\type_react\\src\\styles\\styles.ts",[],"C:\\study\\type_react\\src\\components\\test\\Card\\CardPresenter.tsx",["52","53","54"],"import { Box, IconButton, Input } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { MuiPaper, useStyles } from \"../../../pages/test/styles\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\r\nimport ChatBubbleOutlineIcon from \"@material-ui/icons/ChatBubbleOutline\";\r\nimport TurnedInNotIcon from \"@material-ui/icons/TurnedInNot\";\r\nimport { Favorite } from \"@material-ui/icons\";\r\nimport { getArgumentValues } from \"graphql/execution/values\";\r\n\r\n\r\ninterface ICard{\r\n    toggleLike: () => void;\r\n    fill: boolean;\r\n    handleText: (args: string) => void;\r\n    text: string;\r\n    onSubmit:(arg: string) => void;\r\n    comments: Array<{ squares: Array<string> }>;\r\n}\r\n\r\nconst CardPresenter = (props: ICard) => {\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        \r\n        <MuiPaper className={classes.paper} elevation={3}> {/*elevation : 종이 섀도우*/}\r\n\r\n            <Box className={classes.header}>\r\n                <Box>\r\n                    <img className={classes.avatar} src={\"/img/lo.jpg\"} /> ddd\r\n                </Box>\r\n                <Box>\r\n                    <IconButton>\r\n                        <MoreVertIcon />\r\n                    </IconButton>\r\n                </Box>\r\n            </Box>\r\n            <Box className={classes.img_box}>\r\n                <img \r\n                    className={classes.img_box}\r\n                    src={\"/img/lo.jpg\"}/>\r\n            </Box>\r\n            <Box className={classes.btn_box}>\r\n                <Box>\r\n                    <IconButton onClick={props.toggleLike}>\r\n                        {props.fill ? <Favorite style={{ fill: \"red\" }} /> : <FavoriteBorderIcon />}\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <ChatBubbleOutlineIcon />\r\n                    </IconButton>\r\n                </Box>\r\n                <Box>\r\n                    <IconButton>\r\n                        <TurnedInNotIcon />\r\n                    </IconButton>\r\n                </Box>\r\n            </Box>\r\n            <Box>\r\n                <Box>{/* 본문쓸자리 */}\r\n                    <p>\r\n                        [ 계정 이름 ]   이것은 아마도 본문일껄\r\n                        안녕aaaaaaaaaaaaaaaaaaa nnnnnnnnnnnnnnnnnnnnn\r\n                    </p>\r\n                    <hr></hr>\r\n                </Box>\r\n                <Box>{/* 댓글 표시 */}\r\n                    <div className=\"comment_wrapper\">\r\n                        {props.comments.map((comment, index) => (\r\n                            <ul key={index}>{comment}</ul>\r\n                            ))}\r\n                    </div>\r\n                </Box>\r\n            </Box>\r\n            <Box>{/* 댓글 입력 */}\r\n                <form onSubmit={(e)=>{//댓글입력 시 리프레쉬를 방지\r\n                    e.preventDefault();\r\n                        props.onSubmit(props.text);\r\n                        }}>\r\n                <Input \r\n                        className=\"write_newComment\"\r\n                        onChange={(e)=> props.handleText(e.target.value)} //handleChange\r\n                        placeholder=\"댓글달기...                          \"\r\n                        value={props.text}\r\n                         />\r\n                </form>\r\n            </Box>\r\n        \r\n        </MuiPaper>\r\n        \r\n        );\r\n}\r\n\r\nexport default CardPresenter;","C:\\study\\type_react\\src\\pages\\test\\styles.ts",[],{"ruleId":"55","severity":1,"message":"56","line":3,"column":10,"nodeType":"57","messageId":"58","endLine":3,"endColumn":13},{"ruleId":"55","severity":1,"message":"59","line":19,"column":7,"nodeType":"57","messageId":"58","endLine":19,"endColumn":13},{"ruleId":"55","severity":1,"message":"60","line":32,"column":7,"nodeType":"57","messageId":"58","endLine":32,"endColumn":11},{"ruleId":"61","severity":1,"message":"62","line":2,"column":8,"nodeType":"57","messageId":"58","endLine":2,"endColumn":14},{"ruleId":"61","severity":1,"message":"63","line":3,"column":10,"nodeType":"57","messageId":"58","endLine":3,"endColumn":14},{"ruleId":"55","severity":1,"message":"64","line":9,"column":10,"nodeType":"57","messageId":"58","endLine":9,"endColumn":27},{"ruleId":"65","severity":1,"message":"66","line":30,"column":21,"nodeType":"67","endLine":30,"endColumn":75},{"ruleId":"65","severity":1,"message":"66","line":39,"column":17,"nodeType":"67","endLine":41,"endColumn":42},"@typescript-eslint/no-unused-vars","'img' is defined but never used.","Identifier","unusedVar","'ImgBox' is assigned a value but never used.","'Card' is assigned a value but never used.","no-unused-vars","'styled' is defined but never used.","'Card' is defined but never used.","'getArgumentValues' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]