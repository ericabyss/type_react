[{"C:\\study\\type_react\\src\\route.js":"1","C:\\study\\type_react\\src\\components\\test\\Card\\CardPresenter.tsx":"2","C:\\study\\type_react\\src\\pages\\test\\styles.ts":"3","C:\\study\\type_react\\src\\styles\\styles.ts":"4","C:\\study\\type_react\\src\\styles\\GlobalStyles.ts":"5","C:\\study\\type_react\\src\\apollo\\client.ts":"6","C:\\study\\type_react\\src\\pages\\index.ts":"7","C:\\study\\type_react\\src\\pages\\auth\\AuthContainer.tsx":"8","C:\\study\\type_react\\src\\pages\\test\\TestContainer.tsx":"9","C:\\study\\type_react\\src\\pages\\feed\\FeedContainer.tsx":"10","C:\\study\\type_react\\src\\graphql\\auth.ts":"11","C:\\study\\type_react\\src\\pages\\feed\\FeedPresenter.tsx":"12","C:\\study\\type_react\\src\\pages\\test\\TestPresenter.tsx":"13","C:\\study\\type_react\\src\\pages\\auth\\AuthPresenter.tsx":"14","C:\\study\\type_react\\src\\components\\CardComponent1.js":"15"},{"size":1333,"mtime":1610194155146,"results":"16","hashOfConfig":"17"},{"size":4131,"mtime":1610891299322,"results":"18","hashOfConfig":"17"},{"size":2931,"mtime":1610891266171,"results":"19","hashOfConfig":"17"},{"size":4477,"mtime":1610730320316,"results":"20","hashOfConfig":"17"},{"size":199,"mtime":1609332880269,"results":"21","hashOfConfig":"17"},{"size":1054,"mtime":1609332880193,"results":"22","hashOfConfig":"17"},{"size":208,"mtime":1610108966441,"results":"23","hashOfConfig":"17"},{"size":3878,"mtime":1609339601518,"results":"24","hashOfConfig":"17"},{"size":187,"mtime":1610192292269,"results":"25","hashOfConfig":"17"},{"size":1522,"mtime":1609950140565,"results":"26","hashOfConfig":"17"},{"size":811,"mtime":1609339603786,"results":"27","hashOfConfig":"17"},{"size":1633,"mtime":1610027612861,"results":"28","hashOfConfig":"17"},{"size":398,"mtime":1610108409213,"results":"29","hashOfConfig":"17"},{"size":1303,"mtime":1609332880230,"results":"30","hashOfConfig":"17"},{"size":3328,"mtime":1610105682890,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},"13q86fw",{"filePath":"36","messages":"37","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\study\\type_react\\src\\route.js",["64"],"import { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport { Auth, Feed, Test } from \"./pages\";\r\nimport React from \"react\";\r\nimport { gql, useQuery } from \"@apollo/client\";\r\n\r\nconst LoginRoute = () => {\r\n    return(\r\n    <BrowserRouter>\r\n            <Switch>\r\n                <Route exact path=\"/\" component={Feed} />\r\n                <Route exact path=\"/test\" component={Test} />\r\n            </Switch>\r\n        </BrowserRouter>);\r\n};\r\n\r\n//const isLogin = false;\r\n\r\nconst LogoutRoute = () => {\r\n    return(\r\n    <BrowserRouter>\r\n            <Switch>\r\n                <Route exact path=\"/\" component={Auth} />\r\n            </Switch>\r\n        </BrowserRouter>);\r\n};\r\n\r\nconst Routes = () => {\r\n    const IS_LOGIN = gql`\r\n    {\r\n        isLogin @client \r\n    }\r\n\r\n    `;\r\n\r\n    const{\r\n            data:{isLogin},\r\n        } = useQuery(IS_LOGIN);\r\n    \r\n        return true ? <LoginRoute/> : <LogoutRoute/>;\r\n    };\r\n    \r\n     \r\n\r\n// 라우터에 여러 페이지를 만들어서 -> App에 임포트 시키고 -> index에서 가상돔에 넣어준다\r\n// BrowserRouter - HTML5의 history API를 활용하여 UI를 업데이트(동적인 페이지)\r\n// Switch - path의 충돌이 일어나지 않게 <Route>들을 관리\r\n// Route - 요청받은 pathname에 해당하는 컴포넌트를 렌더링\r\n\r\nexport default Routes;",["65","66"],"C:\\study\\type_react\\src\\components\\test\\Card\\CardPresenter.tsx",["67","68","69","70"],"C:\\study\\type_react\\src\\pages\\test\\styles.ts",[],"C:\\study\\type_react\\src\\styles\\styles.ts",[],"C:\\study\\type_react\\src\\styles\\GlobalStyles.ts",[],"C:\\study\\type_react\\src\\apollo\\client.ts",[],"C:\\study\\type_react\\src\\pages\\index.ts",[],"C:\\study\\type_react\\src\\pages\\auth\\AuthContainer.tsx",[],"C:\\study\\type_react\\src\\pages\\test\\TestContainer.tsx",[],"C:\\study\\type_react\\src\\pages\\feed\\FeedContainer.tsx",[],"C:\\study\\type_react\\src\\graphql\\auth.ts",[],"C:\\study\\type_react\\src\\pages\\feed\\FeedPresenter.tsx",["71","72","73"],"C:\\study\\type_react\\src\\pages\\test\\TestPresenter.tsx",[],"C:\\study\\type_react\\src\\pages\\auth\\AuthPresenter.tsx",[],"C:\\study\\type_react\\src\\components\\CardComponent1.js",["74","75"],{"ruleId":"76","severity":1,"message":"77","line":36,"column":19,"nodeType":"78","messageId":"79","endLine":36,"endColumn":26},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":9,"column":10,"nodeType":"78","messageId":"79","endLine":9,"endColumn":27},{"ruleId":"84","severity":1,"message":"86","line":10,"column":10,"nodeType":"78","messageId":"79","endLine":10,"endColumn":14},{"ruleId":"87","severity":1,"message":"88","line":31,"column":21,"nodeType":"89","endLine":31,"endColumn":79},{"ruleId":"87","severity":1,"message":"88","line":42,"column":17,"nodeType":"89","endLine":44,"endColumn":42},{"ruleId":"84","severity":1,"message":"90","line":3,"column":10,"nodeType":"78","messageId":"79","endLine":3,"endColumn":13},{"ruleId":"84","severity":1,"message":"91","line":19,"column":7,"nodeType":"78","messageId":"79","endLine":19,"endColumn":13},{"ruleId":"84","severity":1,"message":"92","line":32,"column":7,"nodeType":"78","messageId":"79","endLine":32,"endColumn":11},{"ruleId":"76","severity":1,"message":"93","line":2,"column":8,"nodeType":"78","messageId":"79","endLine":2,"endColumn":14},{"ruleId":"76","severity":1,"message":"94","line":3,"column":10,"nodeType":"78","messageId":"79","endLine":3,"endColumn":14},"no-unused-vars","'isLogin' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["95"],"no-negated-in-lhs",["96"],"@typescript-eslint/no-unused-vars","'getArgumentValues' is defined but never used.","'Text' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'img' is defined but never used.","'ImgBox' is assigned a value but never used.","'Card' is assigned a value but never used.","'styled' is defined but never used.","'Card' is defined but never used.","no-global-assign","no-unsafe-negation"]